login to aws instance 
enter as root user sudo su -
update the packages- apt update -y
sudo apt install openjdk-11-jre -y----command is used to install java as jenkin is java based application so java must be there.
java -version----command used to check java version

Below all commands used to install jenkins so run all commands:
curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee   /usr/share/keyrings/jenkins-keyring.asc > /dev/null
echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc]   https://pkg.jenkins.io/debian-stable binary/ | sudo tee   /etc/apt/sources.list.d/jenkins.list > /dev/null
apt-get update
apt-get install jenkins
to check whether jenkins has been install or not use below command:
service jenkins status

lsof -i -P -n | grep LISTEN-----check on which port the jenkins has been installed as we have installed on VM.we have to add this port to security group of EC2 to access it.
After accessing the port kindly check on url by using public ip:8080 
then pop up window came for unlocking jenkins.
then kindly enter into /var/lib/jenkins/secrets/initialAdminPassword ---- to take password plz enter password for further porcess.
After this select the install suggested plug in it will install. 
then add username and all details to start using jenkins.

Now add new item in jenkins
+new item--- create item select freestyle and click ok and add description

select git from source code management

add git repository url for accessing

select the branch which needs to be access

select the GitHub hook trigger for GITScm polling ---------from build trigger 

then go to repository of github and go to seetings and select webhook from left side and create webhook

-then provide URL of jenkins like this http://3.109.213.34:8080/github-webhook/-----------take http://3.109.213.34:8080/ from jenkins and add rest like this 
github-webhook given as anyupdate done in git hub repository it will get notify to jenkins through webhook configuration in github. due to this jenkins will get push request 
that something has been updated.
-then add webhook

then come to jenkins
then apply and save and job get created.

then goto job and check something has been updated gets trigeered or not.
then select trigger click on it then go to console output
then take path of jenkins and check it on instances by entering it into directory cd /var/lib/jenkins/workspace/job1
ls -l
we will get all updation here in vm also.

Now create simple 2more jobs job2 and job3

select job1 and goto configure 
then go to last in job1 select post-build actions
select build other projects

put job2 or job3 that means if job1 succefully triggers then only go to other jobs
then apply save

then go to job2 and configure
do rest steps as above and select job3 
then go to git hub and do somechanges or add file and check whether triggering of one by one is getting done or not.

Now go to dashboard of jobs click on + sign after ALL button we will get 2 views 
LIST View
My View
but we are not getting pipeline view here as we need to install it 

to enhance the feature or add any feature in jenkins we need to do plugin

to install plugin go to dashboard and select the Manage Jenkins from left.

then go to plugin
installed plugin to check all installed pluginds 

if we want to install something go to Available Plugins we will get options are remain to install
check pipeline which want to install
select build pipeline option and install without restart

select restart below option then jenkins will restart
the login again 

we will be able to see pipeline view under + sign

now we will create the slave node on EC2 will learn how to connect to slave node.
we have to access the jobs from jenkins to remote server so some settings are there and we need to connect the slave node for the same.

go to manage jenkins then select nodes and clouds and then create the new node.

then go down and give root directory path /home/ubuntu 
jenkin server and slave node will interact with other through port.

then go to manage jenkins then to security open the agents and select the TCP port to Random.

then again go to the node server and open it and go to configure it from left side the warning has been gone now as we have set up the TCP port.

now we have to do settings so that jenkins server able to connect to the salve node.
this connection will happen through JNLP java netwrok launch protocol.
so we have to run the command shown over the nodes to establish the above connection.

so in the remote server that is on slave node java needs to install for connection and also in security groups we need to open all the ports as we dont know where the
agent will be going to communicate-----------this is very mandatory.

so connect the slave node 
sudo su -
apt-get update -y
install java by command --- apt install openjdk-11-jre -y
then copy paste the commands from node of jenkins 
curl command will download the jar file
then run 2nd command.

now status of node server is enable which was cross earlier.

now we have created the job which needs to access through slave node
for this follow below steps

create job first 
open the job and configure it
from first option General select ---Restrict where this project can be run
then give server name
then add got repo below and apply save

then trigger something from slave node and check in job whether its getting triggered in jenkins.


























