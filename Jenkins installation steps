login to aws instance 
enter as root user sudo su -
update the packages- apt update -y
sudo apt install openjdk-11-jre -y----command is used to install java as jenkin is java based application so java must be there.
java -version----command used to check java version

Below all commands used to install jenkins so run all commands:
curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee   /usr/share/keyrings/jenkins-keyring.asc > /dev/null
echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc]   https://pkg.jenkins.io/debian-stable binary/ | sudo tee   /etc/apt/sources.list.d/jenkins.list > /dev/null
apt-get update
apt-get install jenkins
lsof -i -P -n | grep LISTEN-----check on which port the jenkins has been installed as we have installed on VM.we have to add this port to security group of EC2 to access it.
After accessing the port kindly check on url by using public ip:8080 
then pop up window came for unlocking jenkins.
then kindly enter into /var/lib/jenkins/secrets/initialAdminPassword ---- to take password plz enter password for further porcess.
After this select the install suggested plug in it will install. 
then add username and all details to start using jenkins.

Now add new item in jenkins
+new item--- create item select freestyle and click ok and add description

select git from source code management

add git repository url for accessing

select the branch which needs to be access

select the GitHub hook trigger for GITScm polling ---------from build trigger 

then go to repository of github and go to seetings and select webhook from left side and create webhook

-then provide URL of jenkins like this http://3.109.213.34:8080/github-webhook/-----------take http://3.109.213.34:8080/ from jenkins and add rest like this 
github-webhook given as anyuodate done in git hub it will get notify to jenkins through webhook configuration in github. due to this jenkins will get push request 
that something has been updated.
-then add webhook

then come to jenkins
then apply and save and job get created.

then goto job and check something has been updated gets trigeered or not.
then select trigger click on it then go to console output
then take path of jenkins and check it on instances by entering it into directory cd /var/lib/jenkins/workspace/job1
ls -l
we will get all updation here in vm also.

Now create simple 2more jobs job2 and job3

select job1 and goto configure 
then go to last in job1 select post-build actions
select build other projects

put job2 or job3 that means if job1 succefully triggers then only go to other jobs
then apply save

then go to job2 and configure
do rest steps as above and select job3 


